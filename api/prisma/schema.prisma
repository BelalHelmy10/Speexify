// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")   // <-- important for Neon
}

model Package {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  priceUSD    Int
  features    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  name           String?
  hashedPassword String
  role           String   @default("learner") // learner | teacher | admin
  timezone       String?
  isDisabled     Boolean  @default(false)     // ðŸ‘ˆ NEW

    // â”€â”€ Teacher rates (used for workload/payroll exports) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  rateHourlyCents       Int?    // e.g. 3500 = $35.00 / hour
  ratePerSessionCents   Int?    // e.g. 2000 = $20.00 / session


  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  sessions       Session[]
  audits         Audit[]  @relation("Audit_actor")

  teachingSessions  Session[] @relation("SessionTeacher")

  @@index([role])
}

model Audit {
  id        Int      @id @default(autoincrement())
  actorId   Int
  action    String   // e.g., user_disable, role_change, impersonate_start
  entity    String   // e.g., "User"
  entityId  Int?
  meta      Json?
  createdAt DateTime @default(now())

  actor     User     @relation("Audit_actor", fields: [actorId], references: [id])

  @@index([entity, entityId])
}

model Session {
  id         Int      @id @default(autoincrement())
  title      String
  startAt    DateTime
  endAt      DateTime?
  meetingUrl String?
  notes      String?

  user       User     @relation(fields: [userId], references: [id])
  userId     Int

    // â”€â”€ Assigned teacher (optional) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  teacher    User?    @relation("SessionTeacher", fields: [teacherId], references: [id])
  teacherId  Int?

  // âœ… New: mark that the 24h reminder was sent
  reminder24hSentAt DateTime?
  // âœ… New: mark that the 1h reminder was sent
  reminder1hSentAt  DateTime?

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// prisma/schema.prisma

model VerificationCode {
  id        String   @id @default(cuid())
  email     String   @unique
  codeHash  String
  expiresAt DateTime
  attempts  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PasswordResetCode {
  id        String   @id @default(cuid())
  email     String   @unique
  codeHash  String
  expiresAt DateTime
  attempts  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

